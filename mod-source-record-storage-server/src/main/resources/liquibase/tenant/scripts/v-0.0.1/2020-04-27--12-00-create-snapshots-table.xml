<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.0.xsd">

  <changeSet id="2020-04-27--12-00-create-job-execution-status" author="WilliamWelling">
    <sql>
      CREATE TYPE ${database.defaultSchemaName}.job_execution_status AS ENUM (
        'PARENT',
        'NEW',
        'FILE_UPLOADED',
        'PARSING_IN_PROGRESS',
        'PARSING_FINISHED',
        'PROCESSING_IN_PROGRESS',
        'PROCESSING_FINISHED',
        'COMMIT_IN_PROGRESS',
        'COMMITTED',
        'ERROR',
        'DISCARDED'
      );
    </sql>
  </changeSet>

  <changeSet id="2020-04-27--12-01-create-snapshots-table" author="WilliamWelling">
    <createTable tableName="snapshots_lb">
      <column name="id" type="uuid">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="status" type="${database.defaultSchemaName}.job_execution_status">
        <constraints nullable="false"/>
      </column>
      <column name="processing_started_date" type="timestamptz"></column>
      <column name="createdbyuserid" type="uuid"></column>
      <column name="createddate" type="timestamptz"></column>
      <column name="updatedbyuserid" type="uuid"></column>
      <column name="updateddate" type="timestamptz"></column>
    </createTable>
  </changeSet>

  <changeSet id="2020-04-27--12-02-create-update-snapshots-set-updated-date-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.update_snapshots_set_updated_date() returns trigger
          language plpgsql
      as
      $$
      BEGIN
          NEW.updateddate := current_timestamp;
          RETURN NEW;
      END;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-27--12-03-create-update-snapshots-set-updated-date-trigger" author="WilliamWelling">
    <sql>
      create trigger update_snapshots_set_updated_date
          before insert or update
          on ${database.defaultSchemaName}.snapshots_lb
          for each row
      execute procedure ${database.defaultSchemaName}.update_snapshots_set_updated_date();
    </sql>
  </changeSet>

  <changeSet id="2020-04-27--12-04-create-insert-snapshots-set-created-date-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.insert_snapshots_set_created_date() returns trigger
          language plpgsql
      as
      $$
      BEGIN
          NEW.createddate := current_timestamp;
          NEW.updateddate := NEW.createddate;
          RETURN NEW;
      END;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-04-27--12-05-create-insert-snapshots-set-created-date-trigger" author="WilliamWelling">
    <sql>
      create trigger insert_snapshots_set_created_date
          before insert or update
          on ${database.defaultSchemaName}.snapshots_lb
          for each row
      execute procedure ${database.defaultSchemaName}.insert_snapshots_set_created_date();
    </sql>
  </changeSet>

</databaseChangeLog>
