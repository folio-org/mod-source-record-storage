<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.0.xsd">

  <changeSet id="2020-06-11--12-00-create-job-execution-status" author="WilliamWelling">
    <sql>
      CREATE TYPE ${database.defaultSchemaName}.job_execution_status AS ENUM (
        'PARENT',
        'NEW',
        'FILE_UPLOADED',
        'PARSING_IN_PROGRESS',
        'PARSING_FINISHED',
        'PROCESSING_IN_PROGRESS',
        'PROCESSING_FINISHED',
        'COMMIT_IN_PROGRESS',
        'COMMITTED',
        'ERROR',
        'DISCARDED'
      );
    </sql>
  </changeSet>

  <changeSet id="2020-06-11--12-01-create-snapshots-table" author="WilliamWelling">
    <createTable tableName="snapshots_lb">
      <column name="id" type="uuid">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="status" type="${database.defaultSchemaName}.job_execution_status">
        <constraints nullable="false"/>
      </column>
      <column name="processing_started_date" type="timestamptz"></column>
      <column name="created_by_user_id" type="uuid"></column>
      <column name="created_date" type="timestamptz"></column>
      <column name="updated_by_user_id" type="uuid"></column>
      <column name="updated_date" type="timestamptz"></column>
    </createTable>
  </changeSet>

  <changeSet id="2020-06-11--12-02-create-insert-snapshots-set-dates-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.insert_snapshots_set_dates() returns trigger
          language plpgsql
      as
      $$
      BEGIN
          NEW.created_date := current_timestamp;
          NEW.updated_date := NEW.created_date;
          RETURN NEW;
      END;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-06-11--12-03-create-insert-snapshots-set-dates-trigger" author="WilliamWelling">
    <sql>
      create trigger insert_snapshots_set_dates
          before insert
          on ${database.defaultSchemaName}.snapshots_lb
          for each row
      execute procedure ${database.defaultSchemaName}.insert_snapshots_set_dates();
    </sql>
  </changeSet>

  <changeSet id="2020-06-11--12-04-create-update-snapshots-set-dates-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.update_snapshots_set_dates() returns trigger
          language plpgsql
      as
      $$
      BEGIN
          NEW.updated_date := current_timestamp;
          IF OLD.created_date IS NULL THEN
            NEW.created_date := NEW.updated_date;
          END IF;
          RETURN NEW;
      END;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-06-11--12-05-create-update-snapshots-set-dates-trigger" author="WilliamWelling">
    <sql>
      create trigger update_snapshots_set_dates
          before update
          on ${database.defaultSchemaName}.snapshots_lb
          for each row
      execute procedure ${database.defaultSchemaName}.update_snapshots_set_dates();
    </sql>
  </changeSet>

</databaseChangeLog>
