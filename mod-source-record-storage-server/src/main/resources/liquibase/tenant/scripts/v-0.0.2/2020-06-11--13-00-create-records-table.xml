<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.0.xsd">

  <changeSet id="2020-06-11--13-00-create-record-type" author="WilliamWelling">
    <sql>
      CREATE TYPE ${database.defaultSchemaName}.record_type AS ENUM (
        'MARC'
      );
    </sql>
  </changeSet>

  <changeSet id="2020-06-11--13-01-create-record-type-state" author="WilliamWelling">
    <sql>
      CREATE TYPE ${database.defaultSchemaName}.record_state AS ENUM (
        'ACTUAL',
        'DRAFT',
        'OLD',
        'DELETED'
      );
    </sql>
  </changeSet>

  <changeSet id="2020-06-11--13-02-create-records-table" author="WilliamWelling">
    <createTable tableName="records_lb">
      <column name="id" type="uuid">
        <constraints primaryKey="true" nullable="false"/>
      </column>
      <column name="snapshot_id" type="uuid">
        <constraints nullable="false"/>
      </column>
      <column name="matched_id" type="uuid">
        <constraints nullable="false"/>
      </column>
      <column name="generation" type="integer">
        <constraints nullable="false"/>
      </column>
      <column name="record_type" type="${database.defaultSchemaName}.record_type">
        <constraints nullable="false"/>
      </column>
      <column name="instance_id" type="uuid"></column>
      <column name="state" type="${database.defaultSchemaName}.record_state">
        <constraints nullable="false"/>
      </column>
      <column name="leader_record_status" type="char(1)"></column>
      <column name="order" type="integer"></column>
      <column name="suppress_discovery" type="boolean"></column>
      <column name="created_by_user_id" type="uuid"></column>
      <column name="created_date" type="timestamptz"></column>
      <column name="updated_by_user_id" type="uuid"></column>
      <column name="updated_date" type="timestamptz"></column>
    </createTable>
  </changeSet>

  <changeSet id="2020-06-11--13-03-add-records-snapshot-foreign-key" author="WilliamWelling">
    <addForeignKeyConstraint
        baseColumnNames="snapshot_id"
        baseTableName="records_lb"
        baseTableSchemaName="${database.defaultSchemaName}"
        constraintName="fk_records_snapshots"
        deferrable="true"
        initiallyDeferred="true"
        onDelete="CASCADE"
        onUpdate="RESTRICT"
        referencedColumnNames="id"
        referencedTableName="snapshots_lb"
        referencedTableSchemaName="${database.defaultSchemaName}"/>
  </changeSet>

  <changeSet id="2020-06-11--13-04-set-records-suppress-discovery-default" author="WilliamWelling">
    <addDefaultValue
        columnDataType="boolean"
        columnName="suppress_discovery"
        defaultValueBoolean="false"
        schemaName="${database.defaultSchemaName}"
        tableName="records_lb" />
  </changeSet>

  <changeSet id="2020-06-11--13-05-create-records-snapshotid-index" author="WilliamWelling">
    <createIndex
        indexName="idx_records_snapshot_id"
        schemaName="${database.defaultSchemaName}"
        tableName="records_lb">
      <column name="snapshot_id"/>
    </createIndex>
  </changeSet>

  <changeSet id="2020-06-11--13-06-create-records-instanceid-index" author="WilliamWelling">
    <createIndex
        indexName="idx_records_instance_id"
        schemaName="${database.defaultSchemaName}"
        tableName="records_lb">
      <column name="instance_id"/>
    </createIndex>
  </changeSet>

  <changeSet id="2020-06-11--13-07-create-records-matchedid-generation-index" author="WilliamWelling">
    <createIndex
        indexName="idx_records_matched_id_gen"
        schemaName="${database.defaultSchemaName}"
        tableName="records_lb"
        unique="true">
      <column name="matched_id"/>
      <column name="generation"/>
    </createIndex>
  </changeSet>

  <changeSet id="2020-06-11--13-08-create-records-updated-date-index" author="WilliamWelling">
    <createIndex
        indexName="idx_records_updated_date"
        schemaName="${database.defaultSchemaName}"
        tableName="records_lb">
      <column name="updated_date"/>
    </createIndex>
  </changeSet>

  <changeSet id="2020-06-11--13-09-create-records-leader-record-status-index" author="WilliamWelling">
    <createIndex
        indexName="idx_records_leader_record_status"
        schemaName="${database.defaultSchemaName}"
        tableName="records_lb">
      <column name="leader_record_status"/>
    </createIndex>
  </changeSet>

  <changeSet id="2020-06-11--13-10-create-records-matchedid-state-index" author="WilliamWelling">
    <createIndex
        indexName="idx_records_matched_id_state"
        schemaName="${database.defaultSchemaName}"
        tableName="records_lb">
      <column name="matched_id"/>
      <column name="state"/>
    </createIndex>
  </changeSet>

  <changeSet id="2020-06-11--13-11-create-insert-records-set-dates-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.insert_records_set_dates() returns trigger
          language plpgsql
      as
      $$
      BEGIN
          NEW.created_date := current_timestamp;
          NEW.updated_date := NEW.created_date;
          RETURN NEW;
      END;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-06-11--13-12-create-insert-records-set-dates-trigger" author="WilliamWelling">
    <sql>
      create trigger insert_records_set_dates
          before insert
          on ${database.defaultSchemaName}.records_lb
          for each row
      execute procedure ${database.defaultSchemaName}.insert_records_set_dates();
    </sql>
  </changeSet>

  <changeSet id="2020-06-11--13-13-create-update-records-set-dates-function" author="WilliamWelling">
    <createProcedure>
      create function ${database.defaultSchemaName}.update_records_set_dates() returns trigger
          language plpgsql
      as
      $$
      BEGIN
          NEW.updated_date := current_timestamp;
          IF OLD.created_date IS NULL THEN
            NEW.created_date := NEW.updated_date;
          END IF;
          RETURN NEW;
      END;
      $$;
    </createProcedure>
  </changeSet>

  <changeSet id="2020-06-11--13-14-create-update-records-set-dates-trigger" author="WilliamWelling">
    <sql>
      create trigger update_records_set_dates
          before update
          on ${database.defaultSchemaName}.records_lb
          for each row
      execute procedure ${database.defaultSchemaName}.update_records_set_dates();
    </sql>
  </changeSet>

</databaseChangeLog>
